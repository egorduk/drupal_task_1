<?php

define('PRODUCT_PATH', 'product');

function product_entity_info() {
    $return = array(
        'product' => array(
            'label' => t('Product'),
            'entity class' => 'Product',
            'controller class' => 'ProductController',
            'base table' => 'product',
            'fieldable' => TRUE,
            'load hook' => 'product_load',
            'module' => 'product',
            'entity keys' => array(
                'id' => 'id',
                'label' => 'name'
            ),
            'bundle keys' => array(
                'bundle' => 'name',
            ),
            'bundles' => array(),
            'view modes' => array(
                'full' => array(
                    'label' => t('Full'),
                    'custom settings' => FALSE,
                ),
                'admin' => array(
                    'label' => t('Admin'),
                    'custom settings' => TRUE,
                ),
            ),
            'label callback' => 'entity_class_label',
            'uri callback' => 'entity_class_uri',
        )
    );
    $return['product_type'] = array(
        'label' => t('Product Type'),
        'entity class' => 'ProductType',
        'controller class' => 'ProductTypeController',
        'base table' => 'type_product',
        'fieldable' => FALSE,
        'bundle of' => 'product',
        'entity keys' => array(
            'id' => 'id',
            'label' => 'name'
        ),
        'module' => 'product',
    );
    return $return;
}


function product_menu() {
    $items['product/%product'] = array(
        'title callback' => 'entity_label',
        'title arguments' => array('product', 1),
        'page callback' => 'product_page_view',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'file' => 'product.pages.inc',
    );
    $items['admin/config/product/%product/edit'] = array(
        'title' => 'Edit product',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('product_form', 3),
        'access arguments' => array('administer site configuration'),
        'file' => 'product.admin.inc',
        'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    );
    $items['admin/config/product/%product/delete'] = array(
        'title' => 'Delete product',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('product_delete_form', 3),
        'access arguments' => array('administer site configuration'),
        'file' => 'product.admin.inc',
    );
    $items['admin/config/products/view'] = array(
        'title' => 'Products',
        'page callback' => 'products_page_view',
        'access arguments' => array('administer site configuration'),
        'file' => 'product.pages.inc',
    );
    $items['products/view'] = array(
        'title' => 'Products',
        'page callback' => 'products_page_view_public',
        'access callback' => TRUE,
        'file' => 'product.pages.inc',
    );
    $items['admin/config/product/add'] = array(
        'title' => 'Add product',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('product_form'),
        'access arguments' => array('administer site configuration'),
        'file' => 'product.admin.inc',
    );
    $items['product_type/%product_type'] = array(
        'title callback' => 'entity_label',
        'title arguments' => array('product_type', 1),
        'page callback' => 'product_type_page_view',
        'page arguments' => array(1),
        'access arguments' => array('administer site configuration'),
        'file' => 'product_type.pages.inc',
    );
    $items['admin/config/product_types/view'] = array(
        'title' => 'Product types',
        'page callback' => 'product_types_page_view',
        'access arguments' => array('administer site configuration'),
        'file' => 'product_type.pages.inc',
    );
    $items['admin/config/product_type/add'] = array(
        'title' => 'Add product type',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('product_type_form'),
        'access arguments' => array('administer site configuration'),
        'file' => 'product.admin.inc',
    );
    $items['admin/config/product_type/%product_type/delete'] = array(
        'title' => 'Delete product type',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('product_type_delete_form', 3),
        'access arguments' => array('administer site configuration'),
        'file' => 'product.admin.inc',
    );
    $items['admin/config/product_type/%product_type/edit'] = array(
        'title' => 'Edit product type',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('product_type_form', 3),
        'access arguments' => array('administer site configuration'),
        'file' => 'product.admin.inc',
        'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    );
    return $items;
}

function product_load($product_id, $reset = FALSE) {
    $products = product_load_multiple(array($product_id), array(), $reset);
    return $products ? reset($products) : FALSE;
}

function product_load_multiple($product_ids = array(), $conditions = array(), $reset = FALSE) {
    return entity_load('product', $product_ids, $conditions, $reset);
}

function products() {
    $products = entity_load_multiple_by_name('product', FALSE);
    return $products;
}

function product_save($product) {
    entity_save('product', $product);
}

function product_delete($product) {
    entity_delete('product', entity_id('product', $product));
}

function product_delete_multiple($product_ids) {
    entity_delete_multiple('product', $product_ids);
}

function product_type_load($type) {
    return product_types($type);
}

function product_types($type_name = NULL) {
    $types = entity_load_multiple_by_name('product_type', isset($type_name) ? array($type_name) : FALSE);
    return isset($type_name) ? reset($types) : $types;
}

function product_type($type_id) {
    $type = entity_load_single('product_type', $type_id);
    return $type;
}

function product_types_options() {
    $query = db_select('type_product', 'tp')
        ->fields('tp', array('id', 'name'));
    return $query->execute()->fetchAllKeyed();
}

function product_type_save($type) {
    entity_save('product_type', $type);
}

function product_type_delete($type) {
    entity_delete('product_type', entity_id('product_type' ,$type));
}

function product_type_delete_multiple($type_ids) {
    entity_delete_multiple('product_type', $type_ids);
}

function get_file_by_id($id) {
    $query = db_select('file_managed', 'fm')
        ->fields('fm', array('uri'))
        ->condition('fid', $id);
    return $query->execute()->fetchField();
}