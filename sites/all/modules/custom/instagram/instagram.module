<?php
use MetzWeb\Instagram\Instagram;

define("INSTAGRAM_ID", "0a8c859217034967b1aec64ee5a1d9fc");
define("INSTAGRAM_SECRET", "65bf77bcf7dc42d3b55e39b88e19b983");
define("INSTAGRAM_CALLBACK", "http://localhost/drupal_task_1/user/test?social=instagram");

function instagram_entity_info() {
    $return = array(
        'instagram' => array(
            'label' => t('Instagram'),
            'entity class' => 'Instagram',
            'controller class' => 'InstagramController',
            'base table' => 'instagram',
            'fieldable' => TRUE,
            'load hook' => 'instagram_load',
            'module' => 'instagram',
            'entity keys' => array(
                'id' => 'iid',
                'label' => ''
            ),
            'bundle keys' => array(
                'bundle' => 'name',
            ),
            'bundles' => array(),
            'view modes' => array(
                'full' => array(
                    'label' => t('Full'),
                    'custom settings' => FALSE,
                ),
                'admin' => array(
                    'label' => t('Admin'),
                    'custom settings' => TRUE,
                ),
            ),
            'label callback' => 'entity_class_label',
            'uri callback' => 'entity_class_uri',
        )
    );
    return $return;
}


function instagram_menu() {
    $items['admin/config/instagram'] = array(
        'title callback' => '',
        //'title arguments' => array('twitter', 1),
        'page callback' => 'instagram_page_view',
        //'page arguments' => array(1),
        //'access callback' => TRUE,
        'access arguments' => array('administer site configuration'),
        'file' => 'instagram.pages.inc',
    );
    return $items;
}

function instagram_load($twitter_id, $reset = FALSE) {
    $products = instagram_load_multiple(array($twitter_id), array(), $reset);
    return $products ? reset($products) : FALSE;
}

function instagram_load_multiple($product_ids = array(), $conditions = array(), $reset = FALSE) {
    return entity_load('instagram', $product_ids, $conditions, $reset);
}

function instagram_get_auth_link() {
    require_once 'Instagram/src/Instagram.php';
    $instagram = new Instagram(array(
        'apiKey'      => INSTAGRAM_ID,
        'apiSecret'   => INSTAGRAM_SECRET,
        'apiCallback' => INSTAGRAM_CALLBACK
    ));
    $link = $instagram->getLoginUrl();
    return $link;
}

function instagram_load_by_user() {
    global $user;
    $query = db_select('instagram', 'inst')
        ->fields('inst', array('iid'))
        ->condition('user_id', $user->uid);
    return $query->execute()->fetchField();
}

function instagram_get_posts($id) {
    global $user;
    $instagramAccessToken = db_select('instagram', 'inst')
        ->fields('inst', array('access_token'))
        ->condition('user_id', $user->uid)
        ->execute()
        ->fetchField();
    //var_dump($instagramData);die;
    $module_path = drupal_get_path('module', 'instagram');
    require_once $module_path . '/Instagram/src/Instagram.php';
    $instagram = new Instagram(array(
        'apiKey'      => INSTAGRAM_ID,
        'apiSecret'   => INSTAGRAM_SECRET,
        'apiCallback' => INSTAGRAM_CALLBACK
    ));
    $instagram->setAccessToken($instagramAccessToken);
    $posts = $instagram->getUserMedia();
    $parsedPosts = [];
    foreach($posts->data as $index => $post) {
        $text = isset($post->caption->text) ? $post->caption->text : '';
        $parsedPosts[$index]['date_post'] = $post->created_time;
        $parsedPosts[$index]['content'] = $post->images->standard_resolution->url . ' - ' . $text;
        $parsedPosts[$index]['author'] = $post->user->username . ' - ' . $post->user->full_name;
        //$parsedPosts[$index]['author'] = $post;
    }
    return $parsedPosts;
    //var_dump($posts);die;
}