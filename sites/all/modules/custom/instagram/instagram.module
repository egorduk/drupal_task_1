<?php

require "Instagram/autoload.php";

use Instagram\Instagram;

function instagram_entity_info() {
    $return = array(
        'instagram' => array(
            'label' => t('Instagram'),
            'entity class' => 'Instagram',
            'controller class' => 'InstagramController',
            'base table' => 'instagram',
            'fieldable' => TRUE,
            //'load hook' => 'instagram_load',
            'module' => 'instagram',
            'entity keys' => array(
                'id' => 'iid',
                'label' => ''
            ),
            'bundle keys' => array(
                'bundle' => 'name',
            ),
            'bundles' => array(),
            'view modes' => array(
                'full' => array(
                    'label' => t('Full'),
                    'custom settings' => FALSE,
                ),
                'admin' => array(
                    'label' => t('Admin'),
                    'custom settings' => TRUE,
                ),
            ),
            'label callback' => 'entity_class_label',
            'uri callback' => 'entity_class_uri',
        )
    );
    return $return;
}


function instagram_menu() {
    return array();
}

function instagram_get_auth_link() {
    $module_path = drupal_get_path('module', 'instagram');
    require_once $module_path . '/Instagram/src/Instagram.php';
    $instagram = new Instagram(array(
        'apiKey'      => variable_get_value('social_aggregator:INSTAGRAM_ID'),
        'apiSecret'   => variable_get_value('social_aggregator:INSTAGRAM_SECRET'),
        'apiCallback' => variable_get_value('social_aggregator:INSTAGRAM_CALLBACK')
    ));
    $link = $instagram->getLoginUrl();
    return $link;
}

function instagram_load_by_user() {
    global $user;
    $query = db_select('instagram', 'inst')
        ->fields('inst', array('iid'))
        ->condition('user_id', $user->uid);
    return $query->execute()->fetchField();
}

function instagram_get_posts() {
    global $user;
    $instagramAccessToken = db_select('instagram', 'inst')
        ->fields('inst', array('access_token'))
        ->condition('user_id', $user->uid)
        ->execute()
        ->fetchField();
    $module_path = drupal_get_path('module', 'instagram');
    require_once $module_path . '/Instagram/src/Instagram.php';
    $instagram = new Instagram(array(
        'apiKey'      => variable_get_value('social_aggregator:INSTAGRAM_ID'),
        'apiSecret'   => variable_get_value('social_aggregator:INSTAGRAM_SECRET'),
        'apiCallback' => variable_get_value('social_aggregator:INSTAGRAM_CALLBACK')
    ));
    $instagram->setAccessToken($instagramAccessToken);
    $posts = $instagram->getUserMedia();
    $parsedPosts = [];
    foreach($posts->data as $index => $post) {
        $text = isset($post->caption->text) ? $post->caption->text : '';
        $parsedPosts[$index]['date_post'] = date('d/m/Y', $post->created_time);
        $parsedPosts[$index]['content'] = '<img src="' . $post->images->standard_resolution->url . '"></img><p>' . $text . '</p>';
        $parsedPosts[$index]['author'] = $post->user->username . ' - ' . $post->user->full_name;
    }
    return $parsedPosts;
}

function instagram_reset($id) {
    global $user;
    return db_delete('instagram')
        ->condition('user_id', $user->uid)
        ->condition('iid', $id)
        ->execute();
}

function instagram_save_user_data($arrayData) {
    global $user;
    return db_insert('instagram')
        ->fields(array('user_id', 'access_token'))
        ->values(array(
            'user_id' => $user->uid,
            'access_token' => $arrayData['access_token']
        ))
        ->execute();
}