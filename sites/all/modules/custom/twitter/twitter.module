<?php

require "Twitter/autoload.php";

use Twitter\TwitterOAuth;

function twitter_entity_info() {
    $return = array(
        'twitter' => array(
            'label' => t('Twitter'),
            'entity class' => 'Twitter',
            'controller class' => 'TwitterController',
            'base table' => 'twitter',
            'fieldable' => TRUE,
            //'load hook' => 'twitter_load',
            'module' => 'twitter',
            'entity keys' => array(
                'id' => 'tid',
                'label' => ''
            ),
            'bundle keys' => array(
                'bundle' => 'name',
            ),
            'bundles' => array(),
            'view modes' => array(
                'full' => array(
                    'label' => t('Full'),
                    'custom settings' => FALSE,
                ),
                'admin' => array(
                    'label' => t('Admin'),
                    'custom settings' => TRUE,
                ),
            ),
            'label callback' => 'entity_class_label',
            'uri callback' => 'entity_class_uri',
        )
    );
    return $return;
}

function twitter_menu() {
    return array();
}

/*function twitter_load($twitter_id, $reset = FALSE) {
    $products = twitter_load_multiple(array($twitter_id), array(), $reset);
    return $products ? reset($products) : FALSE;
}

function twitter_load_multiple($product_ids = array(), $conditions = array(), $reset = FALSE) {
    return entity_load('twitter', $product_ids, $conditions, $reset);
}*/

function twitter_load_by_user() {
    global $user;
    $query = db_select('twitter', 'tw')
        ->fields('tw', array('tid'))
        ->condition('user_id', $user->uid);
    return $query->execute()->fetchField();
}

function twitter_get_auth_link() {
    $consumerKey = variable_get_value('social_aggregator:TWITTER_CONSUMER_KEY');
    $consumerSecret = variable_get_value('social_aggregator:TWITTER_CONSUMER_SECRET');
    $redirectUrl = variable_get_value('social_aggregator:TWITTER_OAUTH_CALLBACK');
    $connection = new TwitterOAuth($consumerKey, $consumerSecret);
    $request_token = $connection->oauth('oauth/request_token', array('oauth_callback' => $redirectUrl));
    $link = $connection->url('oauth/authorize', array('oauth_token' => $request_token['oauth_token']));
    $_SESSION['oauth_token'] = $request_token['oauth_token'];
    $_SESSION['oauth_token_secret'] = $request_token['oauth_token_secret'];
    return $link;
}

function twitter_reset($id) {
    global $user;
    return db_delete('twitter')
        ->condition('user_id', $user->uid)
        ->condition('tid', $id)
        ->execute();
}

function twitter_get_posts() {
    global $user;
    $twitterData = db_select('twitter', 'tw')
        ->fields('tw', array('oauth_token', 'oauth_token_secret'))
        ->condition('user_id', $user->uid)
        ->execute()
        ->fetchObject();
    $consumerKey = variable_get_value('social_aggregator:TWITTER_CONSUMER_KEY');
    $consumerSecret = variable_get_value('social_aggregator:TWITTER_CONSUMER_SECRET');
    $connection = new TwitterOAuth($consumerKey, $consumerSecret, $twitterData->oauth_token, $twitterData->oauth_token_secret);
    $twits = $connection->get("statuses/user_timeline");
    $parsedActualTwits = [];
    foreach($twits as $index => $twit) {
        $date = new DateTime($twit->created_at);
        $formattedDate = $date->format('d/m/Y');
        $parsedActualTwits[$index]['date_post'] = $formattedDate;
        $parsedActualTwits[$index]['content'] = $twit->text;
    }
    return $parsedActualTwits;
}

function twitter_publish_post($data) {
    global $user;
    $twitterData = db_select('twitter', 'tw')
        ->fields('tw', array('oauth_token', 'oauth_token_secret'))
        ->condition('user_id', $user->uid)
        ->execute()
        ->fetchObject();
    $consumerKey = variable_get_value('social_aggregator:TWITTER_CONSUMER_KEY');
    $consumerSecret = variable_get_value('social_aggregator:TWITTER_CONSUMER_SECRET');
    $connection = new TwitterOAuth($consumerKey, $consumerSecret, $twitterData->oauth_token, $twitterData->oauth_token_secret);
    $connection->post('statuses/update', array('status' => $data->content));
    return ($connection->getLastHttpCode() == 200) ? true : false;
}

function twitter_save_user_data($arrayData) {
    global $user;
    return db_insert('twitter')
        ->fields(array('user_id', 'oauth_token', 'oauth_token_secret'))
        ->values(array(
            'user_id' => $user->uid,
            'oauth_token' => $arrayData['oauth_token'],
            'oauth_token_secret' => $arrayData['oauth_token_secret'],
        ))
        ->execute();
}